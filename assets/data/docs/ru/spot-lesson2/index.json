{"hash":"12c32127d89afafdc00d8746a2e70813dd33391e","data":{"doc":{"id":"8b13dd114f9cdd8f095d9f169599ec07","title":"Lesson 2. Robot Command Service","contributors":["LoSk-p"],"translated":false,"headings":[],"subtitles":[{"depth":2,"value":"Requirements","anchor":"#requirements"},{"depth":2,"value":"Documentation","anchor":"#documentation"},{"depth":2,"value":"Task","anchor":"#task"}],"content":"\nIn the second lesson you will learn how to use Spot Command services and walk with Spot.\n\n## Requirements\n\nBefore this lesson go through [Lesson 0](/docs/spot-lesson0) to setup your connection.\n\n> Don't forget to run Yggdrasil if you use macOS:\n> ```bash\n> sudo yggdrasil -useconffile /etc/yggdrasil.conf\n> ```\n\n## Documentation\n\nTo control Spot with `Robot Command Service` you firstly need to build command. Spot SDK has RobotCommandBuilder class for it. Full list of methods and its descriprions you can find [here](https://github.com/boston-dynamics/spot-sdk/blob/7ce5c5f31f4e1e45e9ff4be29fb097e258b75919/python/bosdyn-client/src/bosdyn/client/robot_command.py#L593). \n\nIn this lesson you may need to use:\n\n* Stand Command\n```python\ndef stand_command(params=None, body_height=0.0, footprint_R_body=geometry.EulerZXY())\n```\n\n* Go to point\n\n```python\ndef synchro_se2_trajectory_point_command(goal_x, goal_y, goal_heading,      \n                                    frame_name, params=None,\n                                    body_height=0.0,\n                                    locomotion_hint=spot_command_pb2.HINT_AUTO,\n                                    build_on_command=None)\n```\nThe example of use [here](https://github.com/boston-dynamics/spot-sdk/blob/master/python/examples/frame_trajectory_command/frame_trajectory_command.py).\n\n* Velocity Command\n\n```python\ndef velocity_command(v_x, v_y, v_rot, params=None, body_height=0.0,\n                         locomotion_hint=spot_command_pb2.HINT_AUTO, \n                         frame_name=BODY_FRAME_NAME)\n```\nExample of building and running velocity command:\n\n```python\nfrom bosdyn.client.robot_command import RobotCommandClient, RobotCommandBuilder\nimport time\n\ncommand_client = robot.ensure_client(RobotCommandClient.default_service_name)\ncmd = RobotCommandBuilder.velocity_command(0.5, 0, 0.5)\ncommand_client.robot_command(robot_cmd, end_time_secs=time.time() + 2)\n```\n\n## Task\n\nYou will have a list of points with their local coordinates and you need make Spot to go through theese points.\n"}},"context":{}}